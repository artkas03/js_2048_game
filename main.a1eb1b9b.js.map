{"version":3,"sources":["scripts/main.js"],"names":["document","querySelectorAll","startBtn","stopBtn","loseMessage","winMessage","startMessage","cells","getElementsByClassName","cellsMatrix","score","getElementById","board","cellsIndex","i","y","push","gameScore","eventListener","key","code","moveCellsUp","spawnCell","moveCellsDown","moveCellsRight","moveCellsLeft","rowIndex","column","cellIndex","moveInRow","updateNumbers","reverse","index","row","filterZero","length","wonGame","scoreUpdate","countZeroes","numberOfZeroes","reduce","totalNumber","cell","filter","forEach","setNumber","freeCells","total","lostGame","zeroIndex","Math","floor","random","chooseStartNumber","changed","number","innerHTML","classList","remove","window","removeEventListener","add","addEventListener","toggle","fill"],"mappings":"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","file":"main.a1eb1b9b.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-param-reassign */\n'use strict';\n\nconst [startBtn, stopBtn] = document.querySelectorAll('.button');\nconst [loseMessage, winMessage, startMessage]\n  = document.querySelectorAll('.message');\nconst cells = [...document.getElementsByClassName('field_cell')];\nconst cellsMatrix = [];\nconst score = document.getElementById('score');\n\nconst board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet cellsIndex = 0;\n\nfor (let i = 0; i < 4; i++) {\n  cellsMatrix[i] = [];\n\n  for (let y = 0; y < 4; y++) {\n    cellsMatrix[i].push(cells[cellsIndex]);\n    cellsIndex++;\n  }\n}\n\nlet gameScore = 0;\n\nstartBtn.addEventListener('click', () => {\n  startBtn.classList.toggle('hidden');\n  stopBtn.classList.toggle('hidden');\n  startMessage.classList.toggle('hidden');\n\n  window.addEventListener('keydown', eventListener);\n\n  spawnCell();\n});\n\nstopBtn.addEventListener('click', function() {\n  for (const row of board) {\n    row.fill(0, 0, 4);\n  }\n\n  gameScore = 0;\n  scoreUpdate(gameScore);\n  updateNumbers();\n  spawnCell();\n\n  loseMessage.classList.add('hidden');\n\n  window.addEventListener('keydown', eventListener);\n});\n\nfunction eventListener(key) {\n  switch (key.code) {\n    case 'ArrowUp':\n      moveCellsUp();\n      spawnCell();\n      break;\n\n    case 'ArrowDown':\n      moveCellsDown();\n      spawnCell();\n      break;\n\n    case 'ArrowRight':\n      moveCellsRight();\n      spawnCell();\n      break;\n\n    case 'ArrowLeft':\n      moveCellsLeft();\n      spawnCell();\n      break;\n  }\n}\n\nfunction moveCellsUp() {\n  for (const rowIndex in board) {\n    let column = [\n      board[0][rowIndex],\n      board[1][rowIndex],\n      board[2][rowIndex],\n      board[3][rowIndex],\n    ];\n\n    column = moveInRow(column);\n\n    for (const cellIndex in column) {\n      board[cellIndex][rowIndex] = column[cellIndex];\n    }\n  }\n\n  updateNumbers();\n}\n\nfunction moveCellsDown() {\n  for (const rowIndex in board) {\n    let column = [\n      board[0][rowIndex],\n      board[1][rowIndex],\n      board[2][rowIndex],\n      board[3][rowIndex],\n    ];\n\n    column = moveInRow(column.reverse());\n    column.reverse();\n\n    for (const cellIndex in column) {\n      board[cellIndex][rowIndex] = column[cellIndex];\n    }\n  }\n\n  updateNumbers();\n}\n\nfunction moveCellsLeft() {\n  for (const index in board) {\n    board[index] = moveInRow(board[index]);\n  }\n\n  updateNumbers();\n}\n\nfunction moveCellsRight() {\n  for (const index in board) {\n    board[index] = moveInRow(board[index].reverse());\n    board[index].reverse();\n  }\n\n  updateNumbers();\n}\n\nfunction moveInRow(row) {\n  row = filterZero(row);\n\n  for (let i = 0; i < row.length; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      gameScore += row[i];\n\n      if (row[i] === 2048) {\n        wonGame();\n      }\n\n      row[i + 1] = 0;\n    }\n  }\n\n  row = filterZero(row);\n\n  for (let i = row.length; i < 4; i++) {\n    row.push(0);\n  }\n\n  scoreUpdate(gameScore);\n\n  return row;\n}\n\nfunction countZeroes(row) {\n  const numberOfZeroes = row.reduce((totalNumber, cell) => {\n    if (cell === 0) {\n      return totalNumber + 1;\n    }\n\n    return totalNumber;\n  }, 0);\n\n  return numberOfZeroes;\n}\n\nfunction filterZero(row) {\n  return row.filter(cell => cell !== 0);\n}\n\nfunction updateNumbers() {\n  cellsMatrix.forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      setNumber(cell, board[rowIndex][cellIndex]);\n    });\n  });\n}\n\nfunction spawnCell() {\n  const freeCells = board.reduce((total, row) => total + countZeroes(row), 0);\n\n  if (freeCells === 0) {\n    return lostGame();\n  }\n\n  let zeroIndex = Math.floor(Math.random() * freeCells);\n\n  const chanseToSpawn4 = Math.floor(Math.random() * 100);\n\n  const chooseStartNumber = chanseToSpawn4 <= 10 ? 4 : 2;\n\n  for (let i = 0; i < board.length; i++) {\n    let changed = false;\n\n    for (let y = 0; y < board[i].length; y++) {\n      if (board[i][y] === 0) {\n        if (zeroIndex === 0) {\n          board[i][y] = chooseStartNumber;\n          changed = true;\n          break;\n        }\n\n        zeroIndex -= 1;\n      }\n    }\n\n    if (changed) {\n      break;\n    }\n  }\n\n  updateNumbers();\n\n  return true;\n}\n\nfunction scoreUpdate(number) {\n  score.innerHTML = number;\n}\n\nfunction lostGame() {\n  loseMessage.classList.remove('hidden');\n  window.removeEventListener('keydown', eventListener);\n}\n\nfunction wonGame() {\n  winMessage.classList.remove('hidden');\n  window.removeEventListener('keydown', eventListener);\n}\n\nfunction setNumber(cell, number) {\n  cell.classList = 'field_cell';\n  cell.classList.add(`field_cell--${number}`);\n}\n"]}